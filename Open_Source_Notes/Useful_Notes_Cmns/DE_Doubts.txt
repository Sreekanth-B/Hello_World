SET hive.exec.dynamic.partition.mode=nonstrict;
SET hive.optimize.sort.dynamic.partition=true;

ADD FILE ${hiveconf:JOB_PATH}/transform-scripts/${hiveconf:JOB_NAME}-reducer.py;

-- Using Hadoop Streaming with Python script to convert multiple rows into columns and export into HDFS directory

INSERT OVERWRITE DIRECTORY '${hiveconf:HDFSLocation}_temp' 

SELECT regexp_replace(records_csv,'\\\\N','') FROM ( -- Replace '\N' - generate instead of NULL with EMPTY('') 
  FROM ( 
    SELECT rowid, name, TRIM(value) as value, TRIM(unit) as unit, display_name, occ_date, occ_time FROM ${hiveconf:JOB_NAME}_transient 
    DISTRIBUTE BY rowid  
    SORT BY rowid  
  ) mapout 
  REDUCE mapout.rowid, mapout.name, mapout.value, mapout.unit, mapout.display_name, mapout.occ_date, mapout.occ_time 
  USING 'python ${hiveconf:JOB_NAME}-reducer.py' 
  AS rowid, records_csv
) q1;

-- Create temp table
CREATE EXTERNAL TABLE IF NOT EXISTS ${hiveconf:JOB_NAME}_temp ( 
  OCC_TIMESTAMP STRING,
  FILENAME STRING,
  ESN STRING,
  CALIBRATION_SOFTWARE_PHASE STRING,
  ECM_CODE STRING,
  ECM_NAME STRING,
  ENGINE_MODEL STRING,
  VIN STRING,
  PCID STRING,
  OCC_DATE STRING,
  EVENT_ID STRING,
  ECM_TIME STRING,
  ECM_REAL_TIME STRING,
  START_SOOT_FILL_MONITOR_STATUS STRING,
  END_SOOT_FILL_MONITOR_STATUS STRING,
  START_DOC_INLET_TEMPERATURE_UNIT STRING,
  START_DOC_INLET_TEMPERATURE STRING,
  MAXIMUM_DOC_OUT_TEMPERATURE_DURING_UNIT STRING,
  MAXIMUM_DOC_OUT_TEMPERATURE_DURING STRING,
  MAXIMUM_DPF_OUT_TEMPERATURE_DURING_UNIT STRING,
  MAXIMUM_DPF_OUT_TEMPERATURE_DURING STRING,
  MAXIMUM_DPF_DELTA_P_DURING_UNIT STRING,
  MAXIMUM_DPF_DELTA_P_DURING STRING
) 
ROW FORMAT DELIMITED 
  FIELDS TERMINATED BY '|' 
STORED AS TEXTFILE 
LOCATION '${hiveconf:HDFSLocation}_temp';

-- Create Final external base table 
CREATE EXTERNAL TABLE IF NOT EXISTS MDSG_INSITE_${hiveconf:JOB_NAME}_BASE_T ( 
  OCC_TIMESTAMP STRING,
  FILENAME STRING,
  ESN STRING,
  CALIBRATION_SOFTWARE_PHASE STRING,
  ECM_CODE STRING,
  ECM_NAME STRING,
  ENGINE_MODEL STRING,
  VIN STRING,
  PCID STRING,
  EVENT_ID STRING,
  ECM_TIME STRING,
  ECM_REAL_TIME STRING,
  START_SOOT_FILL_MONITOR_STATUS STRING,
  END_SOOT_FILL_MONITOR_STATUS STRING,
  START_DOC_INLET_TEMPERATURE_UNIT STRING,
  START_DOC_INLET_TEMPERATURE STRING,
  MAXIMUM_DOC_OUT_TEMPERATURE_DURING_UNIT STRING,
  MAXIMUM_DOC_OUT_TEMPERATURE_DURING STRING,
  MAXIMUM_DPF_OUT_TEMPERATURE_DURING_UNIT STRING,
  MAXIMUM_DPF_OUT_TEMPERATURE_DURING STRING,
  MAXIMUM_DPF_DELTA_P_DURING_UNIT STRING,
  MAXIMUM_DPF_DELTA_P_DURING STRING
) 
PARTITIONED BY (OCC_DATE STRING) 
ROW FORMAT DELIMITED 
  FIELDS TERMINATED BY '|' 
STORED AS ORC 
LOCATION '${hiveconf:HDFSLocation}';

-- TODO : Replace INTO instead of OVERWRITE once the master table partition implemented
-- Insert partition data into final base table
INSERT OVERWRITE TABLE MDSG_INSITE_${hiveconf:JOB_NAME}_BASE_T PARTITION (OCC_DATE) SELECT OCC_TIMESTAMP,FILENAME,ESN,CALIBRATION_SOFTWARE_PHASE,ECM_CODE,ECM_NAME,ENGINE_MODEL,VIN,PCID,EVENT_ID,ECM_TIME,ECM_REAL_TIME,START_SOOT_FILL_MONITOR_STATUS,END_SOOT_FILL_MONITOR_STATUS,START_DOC_INLET_TEMPERATURE_UNIT,START_DOC_INLET_TEMPERATURE,MAXIMUM_DOC_OUT_TEMPERATURE_DURING_UNIT,MAXIMUM_DOC_OUT_TEMPERATURE_DURING,MAXIMUM_DPF_OUT_TEMPERATURE_DURING_UNIT,MAXIMUM_DPF_OUT_TEMPERATURE_DURING,MAXIMUM_DPF_DELTA_P_DURING_UNIT,MAXIMUM_DPF_DELTA_P_DURING,OCC_DATE FROM ${hiveconf:JOB_NAME}_TEMP DISTRIBUTE BY OCC_DATE SORT BY OCC_DATE;

-- Final View Creation
CREATE VIEW IF NOT EXISTS MDSG_INSITE_${hiveconf:JOB_NAME}_V AS SELECT * FROM MDSG_INSITE_${hiveconf:JOB_NAME}_BASE_T;

-- DROP tables
DROP TABLE IF EXISTS ${hiveconf:JOB_NAME}_transient;

=====================================================================================================================================



