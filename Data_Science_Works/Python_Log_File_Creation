=====================================================================================================================================

from datetime import date
import datetime
import glob 


fileList = glob.glob('/home/user/notebooks/log_Files/Log_try/*.log')
for filePath in fileList:
    os.remove(filePath)
    
def log_file(strg):
    date_part = str(datetime.datetime.now()).split(" ")[0]
    path_1 = '/home/user/notebooks/log_Files/Log_try/try_'+ date_part + ".log"
    with open(path_1, 'a') as f:
        print >>f, strg   
        
        
=====================================================================================================================================

import logging
import os
import logging, getpass, pprint, uuid, time
from datetime import date
import datetime
import glob

date_part = str(datetime.datetime.now()).split(" ")[0]

path_1 = '/home/user/notebooks/log_Files/'   

if os.path.isdir(path_1):
    print('folder already present')
    fileList = glob.glob('/home/user/notebooks/log_Files/*.log')
    print(len(fileList))    
    
    if len(fileList)>0:        
        s=0
        for filePath in fileList:
            os.remove(filePath)
            print('prev log files are removed')
            s+=1
                          
        if (s >= 1):            
            print(s)            
            log_file_path = os.path.normpath(path_1 + "try_" + date_part + ".log")
            logging.basicConfig(filename=log_file_path,format='%(asctime)s %(message)s',filemode='w')
            logger = logging.getLogger()
            logger.setLevel(logging.DEBUG)
            logger.info("log file is created in existing folder after removing old ones")
        else:
            print('can not create log file')
      
    else:        
        log_file_path = os.path.normpath(path_1 + "try_" + date_part + ".log")
        logging.basicConfig(filename=log_file_path,format='%(asctime)s %(message)s',filemode='w')
        logger = logging.getLogger()
        logger.setLevel(logging.DEBUG)
        logger.info("log file is created in existing folder where there are no files present before")
        print('log file is created !!')

else:
    os.mkdir(path_1)
    if os.path.isdir(path_1):        
        log_file_path = os.path.normpath(path_1 + "try_" + date_part + ".log")
        logging.basicConfig(filename=log_file_path,format='%(asctime)s %(message)s',filemode='w')
        logger = logging.getLogger()
        logger.setLevel(logging.DEBUG)
        logger.info("log files and folder created")
        
        
        
 
path_2 = '/home/user/notebooks/'   

log_file_path = os.path.normpath(path_2 + "try_" + date_part + ".log")

logging.basicConfig(filename=log_file_path,format='%(asctime)s %(message)s',filemode='w')
logger = logging.getLogger()
logger.setLevel(logging.DEBUG)
print('ok')




abc = "Sreekanth B"

if "S" in abc :
    logger.info("*** case-1 :: ok :) :) ***")
    print("ok")
else:
    logger.info("First one is not ok")
    print("NOt ok")
